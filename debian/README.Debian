kronolith2 for Debian
---------------------

To configure this package use the horde3 web configuration. To let
it write to the configuration files you have to change of conf.php
file in /etc/horde/kronolith2 to owned by www-data.
You need to create /etc/horde/kronolith2/conf.php.bak file and change
owner to www-data or change owner of /etc/horde/kronolith2 to www-data.

If you do not do that you have to cut from the web configuration
program and paste into the config file yourself.

The reason why this is not the default option is, that allow writing
to configuration files without any authentication is a big
security hole.

.....................................................................

Some notes from upstream INSTALL document follow here:

Prerequisites
=============

To function properly, Kronolith requires the following:

1. MCAL or SQL support in PHP.

   Kronolith store its data either using the MCAL extension, or in an SQL
   database.  Build PHP either ``--with-mcal`` or with whichever SQL driver
   you require; see the Horde `horde/docs/INSTALL`_ file for more details on
   using databases with Horde.

   $ mkdir /var/calendar
   $ chmod 1777 /var/calendar

   Make the mstore password file ``/etc/mpasswd`` with the ``htpasswd``
   program from Apache.  For the first time use::

   $ htpasswd -c /etc/mpasswd username

   and for adding more users don't use the -c switch

   You only need one username to run kronolith.  The calendars for the
   different horde users are managed automatically.


Configuring Kronolith
=====================

1. Configuring Horde for Kronolith

   a. Configuring a DataTree backend

      Kronolith requires a permanent ``DataTree`` backend in Horde to manage
      calendars and to add events to calendars.  If you didn't setup a
      DataTree backend yet, go to the configuration interface, select Horde
      from the list of applications and select a driver different than
      ``None`` on the ``DataTree System`` tab.  Make sure that you ran the
      necessary scripts to create a storage backend for the DataTree system,
      e.g. one of the ``create.*.sql`` or ``horde_datatree.*.sql`` SQL scripts
      in ``horde/scripts/sql/``.  You should have done this already during the
      installation of Horde.

2. Creating the database table [Only if you are using SQL, not libmcal]

   The specific steps to create the Kronolith database table depend on which
   database you've chosen to use.

   First, look in ``scripts/drivers/sql/`` to see if a script already exists
   for your database type.  If so, you should be able to simply execute that
   script as superuser in your database.  (Note that executing the script as
   the "horde" user will probably fail when granting privileges.)

   If such a script does not exist, you'll need to build your own, using the
   file kronolith.sql as a starting point.  If you need assistance in creating
   databases, you may wish to let us know on the Kronolith mailing list.

   You will also need to make sure that the "horde" user in your database has
   table-creation privileges, so that the tables that `PEAR DB`_ uses to
   provide portable sequences can be created.

   .. _`PEAR DB`: http://pear.php.net/DB

3. Configuring Kronolith.

   You must login to Horde as a Horde Administrator to finish the
   configuration of Kronolith.  Use the Horde ``Administration`` menu item to
   get to the administration page, and then click on the ``Configuration``
   icon to get the configuration page.  Select ``Calendar`` from the selection
   list of applications.  Fill in or change any configuration values as
   needed.  When done click on ``Generate Calendar Configuration`` to generate
   the ``conf.php`` file.  If your web server doesn't have write permissions
   to the Kronolith configuration directory or file, it will not be able to
   write the file.  In this case, go back to ``Configuration`` and choose one
   of the other methods to create the configuration file
   ``kronolith/config/conf.php``.

4. Testing Kronolith

   Use Kronolith to create, modify, and delete events. Test at least the
   following:

   - Creating a new event
   - Creating a recurring event
   - Modifying an event
   - Deleting an event


 -- Jose Carlos Medeiros <debian@psabs.com.br>, Tue, 22 Feb 2005 17:45:32 -0300
